#include <iostream>
using namespace std;
class Diagonal
{
  private:
    int n;
    int *A;
  public:
  //create constructor
    Diagonal()
    {
      n=2;
      A=new int[2];
    }  
    // create parametarised
    Diagonal(int n)
    {
      this->n=n;
      A=new int[n];
    }
    ~ Diagonal()
    {
      delete [ ]A;
    }
     void Set(int i, int j, int x);
    int Get(int i, int j);
    void Display();
    int GetDimension(){return n;}
};
 
  void Diagonal::Set(int i, int j, int x)
  {
    if(i==j)
      A[i-1]=x;
  }

  int Diagonal::Get(int i, int j)
  {
    if(i==j)
    return A[i-1];
    return 0;
  }
  void Diagonal::Display()
  {
    int i, j;
    for(i=1;i<=n;i++)
    {
      for(j=1;j<=n;j++)
      {
        if(i==j)
        cout<<A[i-1]<<" ";
        else
        cout<<"0 ";
      }
      cout<<endl;
    }
  }
int main() {
  int m;
  cout<<"Enter Dimension";
  cin>>m;
  Diagonal d(m);

  int x;
  for(int i=1;i<=m;i++)
  {
    for(int j=1;j<=m;j++)
    {
      cin>>x;
      d.Set(i,j,x);
    }
  }
  


  d.Display();
}
//output
1 0 0 0 
0 6 0 0 
0 0 2 0 
0 0 0 7
